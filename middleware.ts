import { NextResponse } from "next/server"
import type { NextRequest } from "next/server"
import { getToken } from "next-auth/jwt"
import { authOptions } from "@/lib/auth" // ‚úÖ ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å

export async function middleware(request: NextRequest) {
  console.log("üõ°Ô∏è Middleware running for path:", request.nextUrl.pathname)

  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á static, API ‡∏´‡∏£‡∏∑‡∏≠ next assets ‚Üí ‡∏Ç‡πâ‡∏≤‡∏°
  if (
    request.nextUrl.pathname.startsWith("/_next") ||
    request.nextUrl.pathname.startsWith("/api") ||
    request.nextUrl.pathname.startsWith("/static")
  ) {
    return NextResponse.next()
  }

  // ‚úÖ ‡∏î‡∏∂‡∏á token ‡∏û‡∏£‡πâ‡∏≠‡∏° secret ‡∏à‡∏≤‡∏Å authOptions
  const token = await getToken({
    req: request,
    secret: authOptions.secret,
  })

  console.log("üç™ Cookies:", request.cookies.getAll())
  console.log("üîê Token:", token ? "‚úÖ exists" : "‚ùå does not exist")

  // ‚ùå ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‚Üí redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login ("/")
  if (!token && request.nextUrl.pathname !== "/") {
    console.log("‚û°Ô∏è Redirecting to home page - no token")
    return NextResponse.redirect(new URL("/", request.url))
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ token ‡πÅ‡∏•‡∏∞‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤ "/" ‚Üí redirect ‡πÑ‡∏õ "/game"
  if (token && request.nextUrl.pathname === "/") {
    console.log("‚û°Ô∏è Redirecting to game page - has token")
    return NextResponse.redirect(new URL("/game", request.url))
  }

  return NextResponse.next()
}

export const config = {
  matcher: ["/((?!api/auth|_next/static|_next/image|favicon.ico).*)"],
}
